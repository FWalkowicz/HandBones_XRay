@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-5">

        <div class="card h-100">
            <div class="card-header">
                <h3 class="card-title">XRay Input Image </h3>
            </div>
            <div class="card-body">
                <img src="../../assets/img/image_placeholder.jpg" alt="..." id="imageInput" class="w-100 rounded">

            </div>
            <div class="card-footer">
                <span class="btn btn-rose btn-round btn-file">

                    <span class="fileinput-new">Select image</span>
                    <input type="file" name="..." onChange="preview_2(this);">
                </span>

            </div>

        </div>

    </div>
    <div class="col-2 text-center">
        <button class="btn btn-info btn-lg" style="top:45%;" id="btn_execute">
            >> Execute >>
            <div class="ripple-container"></div>
        </button>
    </div>
    <div class="col-5">
        <div class="card h-100">
            <div class="card-header">
                <h3 class="card-title" >AI XRay result: <b id="resultDescription"></b> </h3>
            </div>
            <div class="card-body">
                <img src="../../assets/img/image_placeholder.jpg" alt="..." id="imageOutput" class="w-100 rounded">

            </div>
            <div class="card-footer">
                <div class="dropdown show">
                    <button class="dropdown-toggle btn btn-primary btn-round btn-block" type="button" id="multiDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Views
                        <div class="ripple-container"></div>
                    </button>
                    <div class="dropdown-menu" aria-labelledby="multiDropdownMenu" x-placement="bottom-start" style="position: absolute; top: 41px; left: 1px; will-change: top, left;">
                        @* <a class="dropdown-item" id="btn_prediction">Prediction<div class="ripple-container"></div></a>
                        <a class="dropdown-item" id="btn_w_bones">Without Bones<div class="ripple-container"></div></a>
                        <a class="dropdown-item" id="btn_bones">Only Bones<div class="ripple-container"></div></a>
                        <a class="dropdown-item" id="btn_m_prediction">Model Prediction<div class="ripple-container"></div></a>*@
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">

        <div class="card mt-5">
            <div class="card-header">
                <h3 class="card-title">Scan descritpion</h3>
            </div>
            <div class="card-body">
                <p id="description" />
            </div>
            <div class="card-footer">
            </div>

        </div>
    </div>
</div>

<script src="~/assets/js/core/jquery.min.js"></script>

<script>




    var uniqueSessionId = "";

    var inputImage = "imageInput";
    var outputImage = "imageOutput";
    let swalAlert = undefined;

    $("#btn_execute").click(function () {
        sendImage();
    })

    $(".dropdown-menu").on("click", "a", function (event) {
        var className = event.target.className.split(' ')[1];
        callChangeAiModel(className);
        $("#resultDescription").text(event.target.innerText);
    });

    function preview_2(obj) {
        if (FileReader) {
            var reader = new FileReader();
            reader.readAsDataURL(obj.files[0]);
            reader.onload = function (e) {
                var image = new Image();
                image.src = e.target.result;
                image.onload = function () {
                    document.getElementById(inputImage).src = image.src;
                };
            }
        }
        else {
            // Not supported
        }
    }

    function setResult(response) {
        uniqueSessionId = response.uniqueSessionId;
        document.getElementById(outputImage).src = response.imageBase64;
        $("#description").text(response.description);

    }
    function bindViewMenu(response) {
        var obj = response.files;
        Object.keys(obj).forEach(function (key) {
            var text = "<a class='dropdown-item " + obj[key].friendlyName + "'>" + obj[key].label + "<div class='ripple-container'></div></a>";
            $('.dropdown-menu').append(text);

        })
    }
    function showLoading()
    {
        Swal.fire({
            title: 'Wait ...',
            onBeforeOpen() {
                Swal.showLoading()
            },
            onAfterClose() {
                Swal.hideLoading()
            },
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false
        })
    }
  
    function callChangeAiModel(modelName) {
        showLoading();

        $.ajax({
            type: "GET",
            url: "XRay/ChangeAIImage/" + uniqueSessionId + "/" + modelName,
            success: function (response) {
                setResult(response);
                Swal.close();
            },
            error: function (data) {
                console.log("error");
            }

        });
    }

    function sendImage() {
        var imagebase64 = $("#imageInput").attr('src');

        var jsondata = JSON.stringify({
            Image: imagebase64,
        });

        showLoading();

        $.ajax({
            url: 'XRay/ExecuteAI',
            type: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            data: jsondata,
            contentType: "text/json; charset=utf-8",
            success: function (response) {
                setResult(response);
                bindViewMenu(response);
                $("#resultDescription").text("prediction");
                Swal.close();
            },
            error: function (response) {
                //alert(response.status);
            }
        });
    }


</script>